{
    "contents" : "#Functions -- Annual Spending Function\n\nlibrary(Rcpp)\nlibrary(ggplot2)\nlibrary(reshape2)\n\n# function tpv returns the integer year in which the spending model\n# portfolio balance falls to zero. x is the vector containing market return growth\n# factors (market return plus one). initportfolio is the initial portfolio balance.\n# years is the max number of years to calculate (function returns 99 if balance never\n# falls to zero.) spending contains the constant annual spending amount. \n# Start C++ vector index at zero (R starts at 1.)\n\ncppFunction('int tpvf (NumericVector x, int initportfolio, int years, double spending) {\n  int balance = initportfolio;\n  int k;\n  \n  for (k = 0; k <= years-1; ++k) {\n    balance = (balance - spending);\n    if (balance >= 0) balance = balance * x[k];\n  }\n  return balance;\n}'\n)\n\nprint (\" \")\nprint (\" \")\nprint(\"**********************\")\nprint(\"Print TPV's with Fixed Lifetimes\")\nprint(\"**********************\")\n\nset.seed(27514)\nscenarios <- 10000\nyears <- 30\n \ngeoMeanC <- rep(0,scenarios)\nresultC <- rep(0,scenarios)\nstdev <- rep(0,scenarios)\nspending <- 40000\nport <- 1000000\nmu <- .05\nsigma <- 0.11\n\nptm <- proc.time()\n\nfor (i in 1:scenarios) {\n  x <- rlnorm(years,mu,sigma)\n  if (i==1306) xx <- x\n  geoMeanC[i] <- exp(mean(log(x))) - 1\n  resultC[i] <- tpvf(x,port,years,spending)\n  stdev[i] <- sd(x)\n\n}\nproc.time() - ptm \n\nscatplot.df <- data.frame(cbind(geoMeanC,resultC))\ncolnames(scatplot.df) <- c(\"Return\",\"TPV\")\n\nscatplot.df[[\"sign\"]] = ifelse(scatplot.df[[\"TPV\"]] < 0, \"Ruin\",ifelse(scatplot.df[[\"TPV\"]] < port, \"CondSuccess\",\"Success\"))\nscatplot.df <- melt(scatplot.df,id.vars = c(\"Return\",\"TPV\"))\nscatplot.df[,3] <- NULL\ncolnames(scatplot.df) <- c(\"Return\",\"values\",\"Sign\")\noptions (scipen = 8)\n\np <- ggplot(scatplot.df, aes(Return*100,values/1000000,fill=Sign)) +\n  scale_color_manual(values = c(\"Success\" = \"blue3\",\"CondSuccess\"=\"blue1\", \"Ruin\" = \"red\")) +\n  geom_point(aes(color = Sign),size=1) +\n  xlab(\"Percent Geometric Mean Annual Return\") + ylab(\"Terminal Portfolio Value ($M)\") +\n  scale_linetype_discrete(name = \"\") +\n  theme_gray() +\n  xlim(c(0,10)) +\n  ylim(c(-1,7.6)) +\n  theme_set(theme_gray(base_size = 12)) +\n  theme(text=element_text(family=\"Times\")) +\n  theme(legend.title=element_blank()) + \n  theme(legend.position='none') +\n  ggtitle(paste(\"Terminal Portfolio Values Assuming\\n30-year Retirement, \",spending/port*100,\"% Withdrawals\",sep=\"\") )\nprint(p)\n \nprint(\"Cumulative Geometric Return Distribution ******\")\nprint(paste(\">= 7.5% is: \",100*sum(geoMeanC>.075)/scenarios,\"%\",sep=\"\"))\nprint(paste(\"5% to 7.5% is: \",100*(sum(geoMeanC>.05)/scenarios - sum(geoMeanC>.075)/scenarios),\"%\",sep=\"\"))\nprint(paste(\"2.5% to 5% is: \",100*(sum(geoMeanC>=.025)/scenarios - sum(geoMeanC>.05)/scenarios),\"%\",sep=\"\"))\nprint(paste(\"<= 2.5 is: \",100*sum(geoMeanC<.025)/scenarios,\"%\",sep=\"\"))\nmtpvf <- mean(resultC)\n\nprint(paste(\"Mean TPV is: \",round(mtpvf,0),sep=\"\"))\n\nfruin <- sum(resultC<=0)/scenarios\n\nprint(paste(\"Probability of Ruin is:\",fruin*100,\"%\"),sep=\"\")\n\nmtpvQ1 =  mean(scatplot.df$values[scatplot.df$Return<.025])\nmtpvQ4 =  mean(scatplot.df$values[scatplot.df$Return>=.075])\nmtpvQ3 =  mean(scatplot.df$values[scatplot.df$Return>=.05 & scatplot.df$Return<.075])\nmtpvQ2 =  mean(scatplot.df$values[scatplot.df$Return>=.025 & scatplot.df$Return<.05])\n\nprint(paste(\"Q1 mean TPV is: \",round(mtpvQ1,0),sep=\"\"))\nprint(paste(\"Q2 mean TPV is: \",round(mtpvQ2,0),sep=\"\"))\nprint(paste(\"Q3 mean TPV is: \",round(mtpvQ3,0),sep=\"\"))\nprint(paste(\"Q4 mean TPV is: \",round(mtpvQ4,0),sep=\"\"))\n\n#dev.off()\n",
    "created" : 1448806118890.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4016588455",
    "id" : "55392D9D",
    "lastKnownWriteTime" : 1448757661,
    "path" : "~/Desktop/R/Return Uncertainty Post/Plot TPV vs Return Fixed Lifetimes.R",
    "project_path" : "Plot TPV vs Return Fixed Lifetimes.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}